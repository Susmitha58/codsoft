// BankAccount class represents the user's bank account
class BankAccount {
    private double balance;

    // Constructor to initialize the account with a balance
    public BankAccount(double initialBalance) {
        if (initialBalance >= 0) {
            this.balance = initialBalance;
        } else {
            this.balance = 0;
        }
    }

    // Method to get the current balance
    public double getBalance() {
        return balance;
    }

    // Method to deposit an amount to the account
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposit successful! New balance: $" + balance);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    // Method to withdraw an amount from the account
    public boolean withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawal successful! New balance: $" + balance);
            return true;
        } else if (amount > balance) {
            System.out.println("Insufficient funds. Withdrawal failed.");
            return false;
        } else {
            System.out.println("Invalid withdrawal amount.");
            return false;
        }
    }
}

// ATM class represents the ATM machine
class ATM {
    private BankAccount account;

    // Constructor to initialize the ATM with a user's bank account
    public ATM(BankAccount account) {
        this.account = account;
    }

    // Method to display the ATM interface options
    public void showMenu() {
        System.out.println("\nWelcome to the ATM!");
        System.out.println("1. Check Balance");
        System.out.println("2. Deposit");
        System.out.println("3. Withdraw");
        System.out.println("4. Exit");
    }

    // Method to handle the user's menu selection
    public void selectOption(int option, double amount) {
        switch (option) {
            case 1:
                checkBalance();
                break;
            case 2:
                deposit(amount);
                break;
            case 3:
                withdraw(amount);
                break;
            case 4:
                System.out.println("Thank you for using the ATM. Goodbye!");
                break;
            default:
                System.out.println("Invalid option selected.");
        }
    }

    // Method to check the account balance
    public void checkBalance() {
        System.out.println("Your current balance is: $" + account.getBalance());
    }

    // Method to deposit money
    public void deposit(double amount) {
        account.deposit(amount);
    }

    // Method to withdraw money
    public void withdraw(double amount) {
        account.withdraw(amount);
    }
}

// Main class to run the ATM simulation
public class ATMInterface {
    public static void main(String[] args) {
        BankAccount myAccount = new BankAccount(500);  // Create a bank account with an initial balance
        ATM atm = new ATM(myAccount);  // Create an ATM with the user's account

        java.util.Scanner scanner = new java.util.Scanner(System.in);

        while (true) {
            atm.showMenu();  // Display the ATM menu
            System.out.print("Select an option: ");
            int option = scanner.nextInt();

            if (option == 4) {
                atm.selectOption(option, 0);  // Exit the loop if the user chooses to exit
                break;
            }

            if (option == 2 || option == 3) {
                System.out.print("Enter amount: ");
                double amount = scanner.nextDouble();
                atm.selectOption(option, amount);  // Perform deposit or withdrawal
            } else {
                atm.selectOption(option, 0);  // Check balance or invalid option
            }
        }

        scanner.close();
    }
}
